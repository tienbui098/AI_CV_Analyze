@model AI_CV_Analyze.Models.ResumeAnalysisResult

@{
    ViewData["Title"] = "Kết Quả Phân Tích CV";
    Layout = "~/Views/Shared/_LayoutAnalysisResult.cshtml";
    var analysis = Model.Resume?.ResumeAnalysis;
    // Sử dụng điểm từ ViewBag nếu có (ưu tiên cho cả guest)
    int layoutScore = ViewBag.LayoutScore ?? (analysis?.LayoutScore ?? 0);
    int skillScore = ViewBag.SkillScore ?? (analysis?.SkillScore ?? 0);
    int experienceScore = ViewBag.ExperienceScore ?? (analysis?.ExperienceScore ?? 0);
    int educationScore = ViewBag.EducationScore ?? (analysis?.EducationScore ?? 0);
    int keywordScore = ViewBag.KeywordScore ?? (analysis?.KeywordScore ?? 0);
    int formatScore = ViewBag.FormatScore ?? (analysis?.FormatScore ?? 0);
    int totalScore = ViewBag.TotalScore ?? (layoutScore + skillScore + experienceScore + educationScore + keywordScore + formatScore);
    bool hasScore = (layoutScore > 0 || skillScore > 0 || experienceScore > 0 || educationScore > 0 || keywordScore > 0 || formatScore > 0);
    // Nếu là khách, cho phép JS render điểm tạm thời
}

<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- Breadcrumb và navigation -->
    <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-6 gap-4">
        <div class="flex gap-3">
            <a asp-controller="CVAnalysis" asp-action="JobPrediction" class="btn-secondary flex items-center px-4 py-2 border border-gray-300 rounded-lg text-sm font-medium text-gray-700 hover:bg-gray-50 transition">
                <i class="fas fa-arrow-left mr-2"></i> Job suggestions
            </a>
            <button id="btnBackEditSuggestions" type="button" class="btn-secondary flex items-center px-4 py-2 border border-gray-300 rounded-lg text-sm font-medium text-gray-700 hover:bg-gray-50 transition">
                <i class="fas fa-edit mr-2"></i> Edit suggestions
            </button>
        </div>
    </div>

    <!-- Header Section -->
    <div class="text-center mb-8">
        <div class="inline-flex items-center justify-center bg-gradient-to-r from-blue-500 to-blue-600 text-white px-6 py-2 rounded-full mb-4 shadow-md">
            <i class="fas fa-check-circle mr-2"></i>
            <span>Analysis complete</span>
        </div>
        <h1 class="text-3xl font-bold text-gray-900 mb-2">CV Analysis Results</h1>
        <p class="text-lg text-gray-600 max-w-3xl mx-auto">The AI system has analyzed your CV and provided detailed evaluations</p>

        <!-- File info cards -->
        <div class="flex flex-wrap justify-center gap-3 mt-6">
            <div class="bg-white px-4 py-2 rounded-lg shadow-sm border border-gray-100 flex items-center">
                <i class="fas fa-file-alt text-blue-500 mr-2"></i>
                <span class="text-sm font-medium text-gray-700 truncate max-w-xs">@Model.FileName</span>
            </div>
            <div class="bg-white px-4 py-2 rounded-lg shadow-sm border border-gray-100 flex items-center">
                <i class="fas fa-calendar-alt text-blue-500 mr-2"></i>
                <span class="text-sm font-medium text-gray-700">@Model.AnalysisDate.ToString("dd/MM/yyyy HH:mm")</span>
            </div>
            <div class="bg-white px-4 py-2 rounded-lg shadow-sm border border-gray-100 flex items-center">
                <i class="fas fa-robot text-blue-500 mr-2"></i>
                <span class="text-sm font-medium text-gray-700">AI Engine 2.0</span>
            </div>
        </div>
    </div>

    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
        <!-- Main Content -->
        <div class="lg:col-span-2 space-y-6">
            <!-- Overall Analysis -->
            @if (!string.IsNullOrEmpty(Model.OverallAnalysis))
            {
                <div class="bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden">
                    <div class="bg-gradient-to-r from-blue-50 to-gray-50 px-6 py-4 border-b border-gray-100">
                        <h2 class="text-xl font-bold text-gray-800 flex items-center">
                            <i class="fas fa-chart-pie text-blue-500 mr-3"></i> Profile Overview
                        </h2>
                    </div>
                    <div class="p-6">
                        <div class="prose max-w-none text-gray-700">
                            @Html.Raw(Model.OverallAnalysis.Replace("\n", "<br>"))
                        </div>
                    </div>
                </div>
            }

            <!-- Name Section -->
            @if (!string.IsNullOrEmpty(Model.Name))
            {
                <div class="bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden">
                    <div class="bg-gradient-to-r from-blue-50 to-gray-50 px-6 py-4 border-b border-gray-100">
                        <h2 class="text-xl font-bold text-gray-800 flex items-center">
                            <i class="fas fa-user text-blue-500 mr-3"></i> Name
                        </h2>
                    </div>
                    <div class="p-6">
                        <div class="flex flex-wrap gap-3">
                            @foreach (var skill in Model.Name.Split(',').Where(s => !string.IsNullOrWhiteSpace(s)))
                            {
                                <span class="skill-tag bg-blue-50 text-blue-700 px-4 py-2 rounded-full text-sm font-medium border border-blue-100 hover:bg-blue-100 transition">
                                    @skill.Trim()
                                </span>
                            }
                        </div>
                    </div>
                </div>
            }

            <!-- Email Section -->
            @if (!string.IsNullOrEmpty(Model.Email))
            {
                <div class="bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden">
                    <div class="bg-gradient-to-r from-blue-50 to-gray-50 px-6 py-4 border-b border-gray-100">
                        <h2 class="text-xl font-bold text-gray-800 flex items-center">
                            <i class="fas fa-envelope text-blue-500 mr-3"></i> Email
                        </h2>
                    </div>
                    <div class="p-6">
                        <div class="flex flex-wrap gap-3">
                            @foreach (var skill in Model.Email.Split(',').Where(s => !string.IsNullOrWhiteSpace(s)))
                            {
                                <span class="skill-tag bg-blue-50 text-blue-700 px-4 py-2 rounded-full text-sm font-medium border border-blue-100 hover:bg-blue-100 transition">
                                    @skill.Trim()
                                </span>
                            }
                        </div>
                    </div>
                </div>
            }

            <!-- Combined Skills & Language Section -->
            @if (!string.IsNullOrEmpty(Model.Skills) || !string.IsNullOrEmpty(Model.LanguageProficiency))
            {
                <div class="bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden">
                    <div class="bg-gradient-to-r from-blue-50 to-gray-50 px-6 py-4 border-b border-gray-100">
                        <h2 class="text-xl font-bold text-gray-800 flex items-center">
                            <i class="fas fa-tools text-blue-500 mr-3"></i> Skills & Languages
                        </h2>
                    </div>
                    <div class="p-6 space-y-6">
                        <!-- Skills Subsection -->
                        @if (!string.IsNullOrEmpty(Model.Skills))
                        {
                            <div>
                                <h3 class="text-lg font-semibold text-gray-700 mb-3">Technical Skills</h3>
                                <div class="flex flex-wrap gap-3">
                                    @foreach (var skill in Model.Skills.Split(',').Where(s => !string.IsNullOrWhiteSpace(s)))
                                    {
                                        <span class="skill-tag bg-blue-50 text-blue-700 px-4 py-2 rounded-full text-sm font-medium border border-blue-100 hover:bg-blue-100 transition">
                                            @skill.Trim()
                                        </span>
                                    }
                                </div>
                            </div>
                        }

                        <!-- Languages Subsection -->
                        @if (!string.IsNullOrEmpty(Model.LanguageProficiency))
                        {
                            <div>
                                <h3 class="text-lg font-semibold text-gray-700 mb-3">Language</h3>
                                <div class="space-y-3">
                                    @foreach (var skill in Model.LanguageProficiency.Split(',').Where(s => !string.IsNullOrWhiteSpace(s)))
                                    {
                                        <span class="skill-tag bg-blue-50 text-blue-700 px-4 py-2 rounded-full text-sm font-medium border border-blue-100 hover:bg-blue-100 transition">
                                            @skill.Trim()
                                        </span>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }

            <!-- Combined Education, Courses & Certificates Section -->
            @if (!string.IsNullOrEmpty(Model.Education) || !string.IsNullOrEmpty(Model.Course) || !string.IsNullOrEmpty(Model.Certificate))
            {
                <div class="bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden">
                    <div class="bg-gradient-to-r from-blue-50 to-gray-50 px-6 py-4 border-b border-gray-100">
                        <h2 class="text-xl font-bold text-gray-800 flex items-center">
                            <i class="fas fa-graduation-cap text-blue-500 mr-3"></i> Education & Qualifications
                        </h2>
                    </div>
                    <div class="p-6">
                        <div class="space-y-6">
                            <!-- Education Subsection -->
                            @if (!string.IsNullOrEmpty(Model.Education))
                            {
                                <div>
                                    <h3 class="text-lg font-semibold text-gray-700 mb-3">Education</h3>
                                    <div class="space-y-4">
                                        @foreach (var edu in Model.Education.Split(new[] { "\n", "\r\n" }, StringSplitOptions.RemoveEmptyEntries))
                                        {
                                            <div class="timeline-item pl-6 relative">
                                                <div class="absolute left-0 top-2 w-3 h-3 rounded-full bg-blue-500 border-4 border-blue-100"></div>
                                                <div class="text-gray-700 bg-gray-50 p-4 rounded-lg border border-gray-100">
                                                    @edu
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            }

                            <!-- Courses Subsection -->
                            @if (!string.IsNullOrEmpty(Model.Course))
                            {
                                <div>
                                    <h3 class="text-lg font-semibold text-gray-700 mb-3">Course</h3>
                                    <div class="space-y-4">
                                        @foreach (var edu in Model.Course.Split(new[] { "\n", "\r\n" }, StringSplitOptions.RemoveEmptyEntries))
                                        {
                                            <div class="timeline-item pl-6 relative">
                                                <div class="absolute left-0 top-2 w-3 h-3 rounded-full bg-blue-500 border-4 border-blue-100"></div>
                                                <div class="text-gray-700 bg-gray-50 p-4 rounded-lg border border-gray-100">
                                                    @edu
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            }

                            <!-- Certificates Subsection -->
                            @if (!string.IsNullOrEmpty(Model.Certificate))
                            {
                                <div>
                                    <h3 class="text-lg font-semibold text-gray-700 mb-3">Certification</h3>
                                    <div class="space-y-4">
                                        @foreach (var edu in Model.Certificate.Split(new[] { "\n", "\r\n" }, StringSplitOptions.RemoveEmptyEntries))
                                        {
                                            <div class="timeline-item pl-6 relative">
                                                <div class="absolute left-0 top-2 w-3 h-3 rounded-full bg-blue-500 border-4 border-blue-100"></div>
                                                <div class="text-gray-700 bg-gray-50 p-4 rounded-lg border border-gray-100">
                                                    @edu
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }

            <!-- Achievements Section -->
            @if (!string.IsNullOrEmpty(Model.Achievement))
            {
                <div class="bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden">
                    <div class="bg-gradient-to-r from-blue-50 to-gray-50 px-6 py-4 border-b border-gray-100">
                        <h2 class="text-xl font-bold text-gray-800 flex items-center">
                            <i class="fas fa-trophy text-blue-500 mr-3"></i> Achievements
                        </h2>
                    </div>
                    <div class="p-6">
                        <div class="space-y-4">
                            @foreach (var achievement in Model.Achievement.Split(new[] { "\n", "\r\n" }, StringSplitOptions.RemoveEmptyEntries))
                            {
                                <div class="flex items-start">
                                    <i class="fas fa-star text-yellow-400 mt-1 mr-3"></i>
                                    <div class="text-gray-700 bg-gray-50 p-4 rounded-lg border border-gray-100 flex-1">
                                        @achievement
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }

            <!-- Experience Section -->
            @if (!string.IsNullOrEmpty(Model.Experience))
            {
                <div class="bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden">
                    <div class="bg-gradient-to-r from-blue-50 to-gray-50 px-6 py-4 border-b border-gray-100">
                        <h2 class="text-xl font-bold text-gray-800 flex items-center">
                            <i class="fas fa-briefcase text-blue-500 mr-3"></i> Experience
                        </h2>
                    </div>
                    <div class="p-6">
                        <div class="space-y-4">
                            @foreach (var exp in Model.Experience.Split(new[] { "\n", "\r\n" }, StringSplitOptions.RemoveEmptyEntries))
                            {
                                <div class="timeline-item pl-6 relative">
                                    <div class="absolute left-0 top-2 w-3 h-3 rounded-full bg-blue-500 border-4 border-blue-100"></div>
                                    <div class="text-gray-700 bg-gray-50 p-4 rounded-lg border border-gray-100">
                                        @exp
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }

            <!-- Projects Section -->
            @if (!string.IsNullOrEmpty(Model.Project))
            {
                <div class="bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden">
                    <div class="bg-gradient-to-r from-blue-50 to-gray-50 px-6 py-4 border-b border-gray-100">
                        <h2 class="text-xl font-bold text-gray-800 flex items-center">
                            <i class="fas fa-briefcase text-blue-500 mr-3"></i> Projects
                        </h2>
                    </div>
                    <div class="p-6">
                        <div class="prose max-w-none text-gray-700">
                            @Html.Raw(Model.Project.Replace("\n", "<br>"))
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Right Sidebar - Sticky -->
        <div class="lg:col-span-1">
            <div class="sticky-sidebar space-y-6">
                <!-- AI Suggestions -->
                <div class="bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden">
                    <div class="bg-gradient-to-r from-blue-50 to-gray-50 px-6 py-4 border-b border-gray-100">
                        <h2 class="text-xl font-bold text-gray-800 flex items-center">
                            <i class="fas fa-robot text-blue-500 mr-3"></i> AI Recommendation
                        </h2>
                    </div>
                    <div class="p-6">
                        <div class="bg-yellow-50 border-l-4 border-yellow-400 p-4 rounded-r-lg mb-6">
                            <div class="flex">
                                <div class="flex-shrink-0">
                                    <i class="fas fa-lightbulb text-yellow-500 mt-1"></i>
                                </div>
                                <div class="ml-3">
                                    <h3 class="text-sm font-medium text-yellow-800">Click to view detailed edit suggestions from AI</h3>
                                </div>
                            </div>
                        </div>

                        <form asp-action="GetEditSuggestions" method="post" id="editSuggestionsForm" class="space-y-4">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="Content" value="@(Model.Content ?? (ViewBag.CVContent ?? ""))" />
                            <button type="submit" class="w-full flex justify-center items-center px-4 py-3 border border-transparent rounded-xl shadow-sm text-sm font-medium text-white bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition">
                                <i class="fas fa-magic mr-2"></i> CV Edit Suggestions
                            </button>
                        </form>
                    </div>
                </div>

                <!-- CV Scoring Table + Button -->
                <div class="bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden mb-6" id="cv-score-block">
                    <div class="bg-gradient-to-r from-green-50 to-blue-50 px-6 py-4 border-b border-gray-100">
                        <h2 class="text-xl font-bold text-gray-800 flex items-center">
                            <i class="fas fa-star text-yellow-500 mr-3"></i> CV Scoring (AI)
                        </h2>
                    </div>
                    <div class="p-6">
                        <button id="btnScoreCV" class="w-full flex justify-center items-center px-4 py-3 mb-4 border border-transparent rounded-xl shadow-sm text-sm font-medium text-white bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition" data-resumeid="@Model.ResumeId" @(hasScore ? "style='display:none'" : "")>
                            <i class="fas fa-magic mr-2"></i> CV Scoring
                        </button>
                        <div id="cv-score-table" @(hasScore ? "" : "style='display:none'")>
                            <table class="min-w-full text-sm text-gray-700">
                                <tbody>
                                    <tr>
                                        <td class="font-medium py-2 pr-4">Layout and presentation</td>
                                        <td class="text-right py-2" id="score-layout">@layoutScore / 10</td>
                                    </tr>
                                    <tr>
                                        <td class="font-medium py-2 pr-4">Skill</td>
                                        <td class="text-right py-2" id="score-skill">@skillScore / 10</td>
                                    </tr>
                                    <tr>
                                        <td class="font-medium py-2 pr-4">Experience/Project</td>
                                        <td class="text-right py-2" id="score-experience">@experienceScore / 10</td>
                                    </tr>
                                    <tr>
                                        <td class="font-medium py-2 pr-4">Education</td>
                                        <td class="text-right py-2" id="score-education">@educationScore / 10</td>
                                    </tr>
                                    <tr>
                                        <td class="font-medium py-2 pr-4">Relevant Keywords</td>
                                        <td class="text-right py-2" id="score-keyword">@keywordScore / 10</td>
                                    </tr>
                                    <tr>
                                        <td class="font-medium py-2 pr-4">Form/Format</td>
                                        <td class="text-right py-2" id="score-format">@formatScore / 10</td>
                                    </tr>
                                    <tr class="border-t">
                                        <td class="font-bold py-2 pr-4">Total score</td>
                                        <td class="text-right py-2 font-bold text-blue-600 text-lg" id="score-total">@totalScore / 60</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <div id="score-loading" style="display:none" class="text-center text-blue-600 mt-2"><i class="fas fa-spinner fa-spin"></i> Scoring...</div>
                        <div id="score-error" style="display:none" class="text-center text-red-600 mt-2"></div>
                    </div>
                </div>
                <script>
                    document.addEventListener('DOMContentLoaded', function () {
                        var btn = document.getElementById('btnScoreCV');
                        var cvScoreLoadingModal = document.getElementById('cvScoreLoadingModal');
                        if (btn) {
                            btn.addEventListener('click', function () {
                                var resumeId = btn.getAttribute('data-resumeid');
                                var loading = document.getElementById('score-loading');
                                var error = document.getElementById('score-error');
                                var table = document.getElementById('cv-score-table');
                                btn.style.display = 'none';
                                error.style.display = 'none';
                                loading.style.display = 'block';
                                if (cvScoreLoadingModal) {
                                    cvScoreLoadingModal.classList.remove('hidden');
                                    cvScoreLoadingModal.style.display = 'flex';
                                }
                                fetch('/CVAnalysis/ScoreCV', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/x-www-form-urlencoded',
                                        'RequestVerificationToken': document.querySelector('input[name=__RequestVerificationToken]')?.value || ''
                                    },
                                    body: 'resumeId=' + encodeURIComponent(resumeId) + '&cvContent=' + encodeURIComponent('@(Model.Content ?? "")')
                                })
                                .then(res => res.json())
                                .then(data => {
                                    loading.style.display = 'none';
                                    if (cvScoreLoadingModal) {
                                        cvScoreLoadingModal.classList.add('hidden');
                                        cvScoreLoadingModal.style.display = 'none';
                                    }
                                    if (data.success) {
                                        table.style.display = 'block';
                                        btn.style.display = 'none';
                                        // Hiển thị điểm vừa chấm lên bảng điểm (kể cả khách)
                                        document.getElementById('score-layout').textContent = data.layout + ' / 10';
                                        document.getElementById('score-skill').textContent = data.skill + ' / 10';
                                        document.getElementById('score-experience').textContent = data.experience + ' / 10';
                                        document.getElementById('score-education').textContent = data.education + ' / 10';
                                        document.getElementById('score-keyword').textContent = data.keyword + ' / 10';
                                        document.getElementById('score-format').textContent = data.format + ' / 10';
                                        document.getElementById('score-total').textContent = data.total + ' / 60';
                                    } else {
                                        btn.style.display = 'block';
                                        error.style.display = 'block';
                                        error.textContent = data.error || 'An error occurred while scoring the CV.';
                                    }
                                })
                                .catch(err => {
                                    loading.style.display = 'none';
                                    if (cvScoreLoadingModal) {
                                        cvScoreLoadingModal.classList.add('hidden');
                                        cvScoreLoadingModal.style.display = 'none';
                                    }
                                    btn.style.display = 'block';
                                    error.style.display = 'block';
                                    error.textContent = 'An error occurred while connecting to the server.';
                                });
                            });
                        }
                    });
                </script>

                <!-- Job Recommendations -->
                <div class="bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden">
                    <div class="bg-gradient-to-r from-blue-50 to-gray-50 px-6 py-4 border-b border-gray-100">
                        <h2 class="text-xl font-bold text-gray-800 flex items-center">
                            <i class="fas fa-briefcase text-blue-500 mr-3"></i>Suitable Jobs
                        </h2>
                    </div>
                    <div class="p-6">
                        <div class="text-center py-6">
                            <div id="jobRecommendResult" class="mb-4">
                                @{
                                    var jobRecsObj = ViewBag.JobRecommendations;
                                }
                                @if (jobRecsObj is AI_CV_Analyze.Models.JobSuggestionResult jobResult && !string.IsNullOrEmpty(jobResult.RecommendedJob))
                                {
                                    <div class="space-y-4">
                                        <p class="text-sm text-gray-600 mb-4">Based on your skills and experience, we recommend the following position:</p>
                                        <div class="job-card p-4 rounded-lg border border-gray-100 hover:border-blue-200 hover:shadow-md transition">
                                            <div class="flex items-start">
                                                <div class="flex-grow">
                                                    <h3 class="font-bold text-gray-900">@jobResult.RecommendedJob</h3>
                                                    <div class="flex items-center mt-2">
                                                        <div class="w-full bg-gray-200 rounded-full h-2 mr-3">
                                                            <div class="bg-green-500 h-2 rounded-full" style="width: @jobResult.MatchPercentage%"></div>
                                                        </div>
                                                        <span class="text-xs text-gray-600">@jobResult.MatchPercentage%</span>
                                                    </div>
                                                </div>
                                            </div>
                                            @if (jobResult.MatchedSkills != null && jobResult.MatchedSkills.Any())
                                            {
                                                <div class="mb-2">
                                                    <span class="font-semibold text-green-700">Matched Skills (@jobResult.MatchPercentage%):</span>
                                                    <ul class="list-disc ml-6">
                                                        @foreach (var skill in jobResult.MatchedSkills)
                                                        {
                                                            <li>@skill</li>
                                                        }
                                                    </ul>
                                                </div>
                                            }
                                            @if (jobResult.MissingSkills != null && jobResult.MissingSkills.Any())
                                            {
                                                <div class="mb-2">
                                                    <span class="font-semibold text-red-700">Missing Skills (@(100 - jobResult.MatchPercentage)%):</span>
                                                    <ul class="list-disc ml-6">
                                                        @foreach (var skill in jobResult.MissingSkills)
                                                        {
                                                            <li>@skill</li>
                                                        }
                                                    </ul>
                                                </div>
                                            }
                                            @if (!string.IsNullOrEmpty(jobResult.ImprovementPlan))
                                            {
                                                <div class="mb-2">
                                                    <span class="font-semibold text-blue-700">Improvement Plan:</span>
                                                    <div class="whitespace-pre-line text-gray-800">@jobResult.ImprovementPlan</div>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                    <a href="/CVAnalysis/JobPrediction" class="mt-6 w-full flex justify-center items-center px-4 py-3 border border-gray-300 rounded-xl shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition"><i class="fas fa-search mr-2"></i>View more jobs</a>
                                }
                                else
                                {
                                    <div class="text-gray-500">No job recommendations available.</div>
                                }
                            </div>
                            <form method="post" asp-action="AnalysisResult" class="mt-4">
                                <input type="hidden" name="resumeId" value="@Model.ResumeId" />
                                <button type="submit" class="w-full flex justify-center items-center px-4 py-3 mb-4 border border-transparent rounded-xl shadow-sm text-sm font-medium text-white bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition">
                                    <i class="fas fa-magic mr-2"></i> Job Recommend
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Action Buttons -->
    <div class="mt-8 flex flex-col sm:flex-row justify-center gap-4">
        <a asp-action="Index" class="w-full sm:w-auto flex justify-center items-center px-6 py-3 border border-transparent rounded-xl shadow-sm text-sm font-medium text-white bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition">
            <i class="fas fa-redo mr-2"></i> Analyze another CV
        </a>
        <button id="shareResultBtn" class="w-full sm:w-auto flex justify-center items-center px-6 py-3 border border-gray-300 rounded-xl shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition">
            <i class="fas fa-share-alt mr-2"></i> Share your results
        </button>
    </div>
</div>

<!-- Loading Modal -->
<div id="loadingModal" class="fixed inset-0 z-50 flex items-center justify-center bg-opacity-40 hidden">
    <div class="bg-white rounded-xl shadow-lg p-8 flex flex-col items-center animate__animated animate__fadeInDown w-80">
        <div id="loadingSpinner" class="mb-4">
            <svg class="animate-spin h-10 w-10 text-blue-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8v8z"></path>
            </svg>
        </div>
        <div id="loadingText" class="font-semibold text-lg text-center">
            The AI system is processing and generating edit suggestions. Please wait a moment...
        </div>
        <div class="mt-4">
            <button type="button" id="cancelAnalyzeBtn" class="px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 transition">Cancel</button>
        </div>
    </div>
</div>

<!-- Loading Modal for CV Scoring -->
<div id="cvScoreLoadingModal" class="fixed inset-0 z-50 flex items-center justify-center bg-opacity-40 hidden">
    <div class="bg-white rounded-xl shadow-lg p-8 flex flex-col items-center animate__animated animate__fadeInDown w-80">
        <div class="mb-4">
            <svg class="animate-spin h-10 w-10 text-blue-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8v8z"></path>
            </svg>
        </div>
        <div class="font-semibold text-lg text-center">
            AI system is scoring your CV. Please wait a moment...
        </div>
    </div>
</div>

<!-- Share Modal -->
<div id="shareModal" class="fixed inset-0 z-50 hidden items-center justify-center bg-black bg-opacity-50 backdrop-blur-sm">
    <div class="bg-white rounded-2xl shadow-xl p-6 max-w-md w-full mx-4">
        <div class="flex justify-between items-center mb-4">
            <h3 class="text-lg font-bold text-gray-900">Share your results</h3>
            <button id="closeShareModal" class="text-gray-400 hover:text-gray-500">
                <i class="fas fa-times"></i>
            </button>
        </div>
        <div class="space-y-4">
            <div>
                <label for="shareLink" class="block text-sm font-medium text-gray-700 mb-1">Link</label>
                <div class="flex">
                    <input type="text" id="shareLink" readonly value="@Context.Request.Scheme://@Context.Request.Host@Context.Request.Path" class="flex-1 min-w-0 block w-full px-3 py-2 rounded-l-lg border border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                    <button id="copyShareLink" class="inline-flex items-center px-3 py-2 border border-l-0 border-gray-300 rounded-r-lg bg-gray-50 text-sm font-medium text-gray-700 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500">
                        <i class="fas fa-copy mr-1"></i>Copy
                    </button>
                </div>
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">Share via</label>
                <div class="flex space-x-3">
                    <a href="#" class="w-10 h-10 rounded-full bg-blue-600 text-white flex items-center justify-center hover:bg-blue-700 transition">
                        <i class="fab fa-facebook-f"></i>
                    </a>
                    <a href="#" class="w-10 h-10 rounded-full bg-blue-400 text-white flex items-center justify-center hover:bg-blue-500 transition">
                        <i class="fab fa-linkedin-in"></i>
                    </a>
                    <a href="#" class="w-10 h-10 rounded-full bg-red-600 text-white flex items-center justify-center hover:bg-red-700 transition">
                        <i class="fab fa-google"></i>
                    </a>
                    <a href="#" class="w-10 h-10 rounded-full bg-gray-800 text-white flex items-center justify-center hover:bg-gray-900 transition">
                        <i class="fab fa-github"></i>
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById('btnBackEditSuggestions').addEventListener('click', function() {
            fetch('@Url.Action("HasEditSuggestions", "CVAnalysis")', { method: 'GET' })
                .then(res => res.json())
                .then(data => {
                    if (data.hasSuggestions) {
                        window.location.href = '@Url.Action("EditSuggestions", "CVAnalysis")';
                    } else {
                        alert('You have not used the CV edit suggestion feature yet!');
                    }
                });
        });
    </script>
}