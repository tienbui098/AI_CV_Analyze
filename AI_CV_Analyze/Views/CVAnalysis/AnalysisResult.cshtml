@model AI_CV_Analyze.Models.ResumeAnalysisResult

@{
    ViewData["Title"] = "Kết Quả Phân Tích CV";
    Layout = "~/Views/Shared/_LayoutAnalysisResult.cshtml";
    var analysis = Model.Resume?.ResumeAnalysis;
    // Sử dụng điểm từ ViewBag nếu có (ưu tiên cho cả guest)
    int layoutScore = ViewBag.LayoutScore ?? (analysis?.LayoutScore ?? 0);
    int skillScore = ViewBag.SkillScore ?? (analysis?.SkillScore ?? 0);
    int experienceScore = ViewBag.ExperienceScore ?? (analysis?.ExperienceScore ?? 0);
    int educationScore = ViewBag.EducationScore ?? (analysis?.EducationScore ?? 0);
    int keywordScore = ViewBag.KeywordScore ?? (analysis?.KeywordScore ?? 0);
    int formatScore = ViewBag.FormatScore ?? (analysis?.FormatScore ?? 0);
    int totalScore = ViewBag.TotalScore ?? (layoutScore + skillScore + experienceScore + educationScore + keywordScore + formatScore);
    bool hasScore = (layoutScore > 0 || skillScore > 0 || experienceScore > 0 || educationScore > 0 || keywordScore > 0 || formatScore > 0);
    // Nếu là khách, cho phép JS render điểm tạm thời
}

<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- Breadcrumb và navigation -->
    <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-6 gap-4">
        <div class="flex gap-3">
            <a asp-controller="CVAnalysis" asp-action="JobPrediction" class="btn-secondary flex items-center px-4 py-2 border border-gray-300 rounded-lg text-sm font-medium text-gray-700 hover:bg-gray-50 transition">
                <i class="fas fa-arrow-left mr-2"></i> Job suggestions
            </a>
            <button id="btnBackEditSuggestions" type="button" class="btn-secondary flex items-center px-4 py-2 border border-gray-300 rounded-lg text-sm font-medium text-gray-700 hover:bg-gray-50 transition">
                <i class="fas fa-edit mr-2"></i> Edit suggestions
            </button>
        </div>
    </div>

    <!-- Header Section -->
    <div class="text-center mb-8">
        <div class="inline-flex items-center justify-center bg-gradient-to-r from-blue-500 to-blue-600 text-white px-6 py-2 rounded-full mb-4 shadow-md">
            <i class="fas fa-check-circle mr-2"></i>
            <span>Analysis complete</span>
        </div>
        <h1 class="text-3xl font-bold text-gray-900 mb-2">CV Analysis Results</h1>
        <p class="text-lg text-gray-600 max-w-3xl mx-auto">The AI system has analyzed your CV and provided detailed evaluations</p>

        <!-- File info cards -->
        <div class="flex flex-wrap justify-center gap-3 mt-6">
            <div class="bg-white px-4 py-2 rounded-lg shadow-sm border border-gray-100 flex items-center">
                <i class="fas fa-file-alt text-blue-500 mr-2"></i>
                <span class="text-sm font-medium text-gray-700 truncate max-w-xs">@Model.FileName</span>
            </div>
            <div class="bg-white px-4 py-2 rounded-lg shadow-sm border border-gray-100 flex items-center">
                <i class="fas fa-calendar-alt text-blue-500 mr-2"></i>
                <span class="text-sm font-medium text-gray-700">@Model.AnalysisDate.ToString("dd/MM/yyyy HH:mm")</span>
            </div>
            <div class="bg-white px-4 py-2 rounded-lg shadow-sm border border-gray-100 flex items-center">
                <i class="fas fa-robot text-blue-500 mr-2"></i>
                <span class="text-sm font-medium text-gray-700">AI Engine 2.0</span>
            </div>
        </div>
    </div>

    <!-- PHẦN GRID 3 CỘT -->
    <div class="grid grid-cols-1 md:grid-cols-12 gap-2">
        <!-- CỘT TRÁI: CV Scoring + Job Recommendation -->
        <div class="space-y-6 order-1 md:order-1 md:col-span-3">
            <!-- CV Scoring Block -->
            <div class="bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden mb-6" id="cv-score-block">
                <div class="bg-gradient-to-r from-green-50 to-blue-50 px-6 py-4 border-b border-gray-100">
                    <h2 class="text-xl font-bold text-gray-800 flex items-center">
                        <i class="fas fa-star text-yellow-500 mr-3"></i> CV Scoring (AI)
                    </h2>
                </div>
                <div class="p-6">
                    <button id="btnScoreCV" class="w-full flex justify-center items-center px-4 py-3 mb-4 border border-transparent rounded-xl shadow-sm text-sm font-medium text-white bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition" data-resumeid="@Model.ResumeId" @(hasScore ? "style='display:none'" : "")>
                        <i class="fas fa-magic mr-2"></i> CV Scoring
                    </button>
                    <div id="cv-score-table" @(hasScore ? "" : "style='display:none'")>
                        <table class="min-w-full text-sm text-gray-700">
                            <tbody>
                                <tr>
                                    <td class="font-medium py-2 pr-4">Layout and presentation</td>
                                    <td class="text-right py-2" id="score-layout">@layoutScore / 10</td>
                                </tr>
                                <tr>
                                    <td class="font-medium py-2 pr-4">Skill</td>
                                    <td class="text-right py-2" id="score-skill">@skillScore / 10</td>
                                </tr>
                                <tr>
                                    <td class="font-medium py-2 pr-4">Experience/Project</td>
                                    <td class="text-right py-2" id="score-experience">@experienceScore / 10</td>
                                </tr>
                                <tr>
                                    <td class="font-medium py-2 pr-4">Education</td>
                                    <td class="text-right py-2" id="score-education">@educationScore / 10</td>
                                </tr>
                                <tr>
                                    <td class="font-medium py-2 pr-4">Relevant Keywords</td>
                                    <td class="text-right py-2" id="score-keyword">@keywordScore / 10</td>
                                </tr>
                                <tr>
                                    <td class="font-medium py-2 pr-4">Form/Format</td>
                                    <td class="text-right py-2" id="score-format">@formatScore / 10</td>
                                </tr>
                                <tr class="border-t">
                                    <td class="font-bold py-2 pr-4">Total score</td>
                                    <td class="text-right py-2 font-bold text-blue-600 text-lg" id="score-total">@totalScore / 60</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <div id="score-loading" style="display:none" class="text-center text-blue-600 mt-2"><i class="fas fa-spinner fa-spin"></i> Scoring...</div>
                    <div id="score-error" style="display:none" class="text-center text-red-600 mt-2"></div>
                </div>
            </div>
            <!-- Job Recommendation Block -->
            <div class="bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden">
                <div class="bg-gradient-to-r from-blue-50 to-gray-50 px-6 py-4 border-b border-gray-100">
                    <h2 class="text-xl font-bold text-gray-800 flex items-center">
                        <i class="fas fa-briefcase text-blue-500 mr-3"></i>Suitable Jobs
                    </h2>
                </div>
                <div class="p-6">
                    <div class="text-center py-6">
                        <div id="jobRecommendResult" class="mb-4">
                            @{
                                var jobRecs = ViewBag.JobRecommendations as Dictionary<string, double>;
                            }
                            @if (jobRecs != null && jobRecs.Any())
                            {
                                <div class="space-y-4">
                                    <p class="text-sm text-gray-600 mb-4">Based on your skills and experience, we recommend the following positions:</p>
                                    @foreach (var job in jobRecs.OrderByDescending(x => x.Value).Take(3))
                                    {
                                        var percent = (job.Value * 100).ToString("F1");
                                        <div class="job-card p-4 rounded-lg border border-gray-100 hover:border-blue-200 hover:shadow-md transition">
                                            <div class="flex items-start">
                                                <div class="flex-grow">
                                                    <h3 class="font-bold text-gray-900">@job.Key</h3>
                                                    <div class="flex items-center mt-2">
                                                        <div class="w-full bg-gray-200 rounded-full h-2 mr-3">
                                                            <div class="bg-green-500 h-2 rounded-full" style="width: @percent%"></div>
                                                        </div>
                                                        <span class="text-xs text-gray-600">@percent%</span>
                                                    </div>
                                                </div>
                                                <div class="ml-4">
                                                    <div class="circular-chart w-12 h-12">
                                                        <svg viewBox="0 0 36 36">
                                                            <path class="circle-bg" d="M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831" />
                                                            <path class="circle" stroke="#10b981" stroke-dasharray="@percent, 100" d="M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831" />
                                                            <text x="18" y="20.35" class="percentage">@((int)(job.Value * 100))%</text>
                                                        </svg>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                                <a href="/CVAnalysis/JobPrediction" class="mt-6 w-full flex justify-center items-center px-4 py-3 border border-gray-300 rounded-xl shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition"><i class="fas fa-search mr-2"></i>View more jobs</a>
                            }
                        </div>
                        <button id="btnJobRecommend" type="button" class=" w-full flex justify-center items-center px-4 py-3 mb-4 border border-transparent rounded-xl shadow-sm text-sm font-medium text-white bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition">
                            <i class="fas fa-magic mr-2"></i> Job Recommendation
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <!-- CỘT GIỮA: Nhận gợi ý chỉnh sửa + nội dung đề xuất chỉnh sửa -->
        <div class="order-2 md:order-2 md:col-span-6 flex flex-col items-center">
            <div class="w-full max-w-2xl mx-auto">
                <!-- AI Recommendation -->
                <div class="bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden mb-6">
                    <div class="bg-gradient-to-r from-blue-50 to-gray-50 px-6 py-4 border-b border-gray-100">
                        <h2 class="text-xl font-bold text-gray-800 flex items-center">
                            <i class="fas fa-robot text-blue-500 mr-3"></i> AI Recommendation
                        </h2>
                    </div>
                    <div class="p-6">
                        <div class="bg-yellow-50 border-l-4 border-yellow-400 p-4 rounded-r-lg mb-6">
                            <div class="flex">
                                <div class="flex-shrink-0">
                                    <i class="fas fa-lightbulb text-yellow-500 mt-1"></i>
                                </div>
                                <div class="ml-3">
                                    <h3 class="text-sm font-medium text-yellow-800">Click to view detailed edit suggestions from AI</h3>
                                </div>
                            </div>
                        </div>

                        <!-- Nút nhận gợi ý chỉnh sửa -->
                        <form id="editSuggestionsForm" method="post" asp-action="GetEditSuggestions" class="space-y-4 mb-6">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="Content" value="@(Model.Content ?? (ViewBag.CVContent ?? ""))" />
                            <button type="submit" class="w-full flex justify-center items-center px-4 py-3 border border-transparent rounded-xl shadow-sm text-lg font-bold text-white bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition">
                                <i class="fas fa-magic mr-2"></i> Nhận gợi ý chỉnh sửa CV từ AI
                            </button>
                        </form>
                    </div>
                </div>
                <!-- Error Message -->
                @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
                {
                    <div class="bg-yellow-50 border-l-4 border-yellow-400 p-4 rounded-r-lg mb-8">
                        <div class="flex">
                            <div class="flex-shrink-0">
                                <i class="fas fa-exclamation-triangle text-yellow-500"></i>
                            </div>
                            <div class="ml-3">
                                <p class="text-sm text-yellow-700">
                                    @ViewBag.ErrorMessage
                                </p>
                            </div>
                        </div>
                    </div>
                }

                <!-- Suggestions Card -->
                <div class="suggestion-card bg-white p-6 rounded-xl shadow-md">
                    <div class="flex items-center mb-6">
                        <div class="ai-icon bg-blue-50 text-blue-600 p-3 rounded-xl mr-4">
                            <i class="fas fa-robot text-2xl"></i>
                        </div>
                        <h2 class="text-2xl font-bold text-gray-800">Edit suggestions from AI</h2>
                        <!-- Copy button phía trên nội dung gợi ý -->
                        <div class="flex justify-end mb-4">
                            <button id="copy-btn" class="copy-btn flex items-center">
                                <i class="far fa-copy mr-2"></i> Copy
                            </button>
                        </div>
                    </div>

                    <div class="suggestion-content bg-gray-50 p-6 rounded-lg border-l-4 border-yellow-400">
                        <!-- Format sections with proper spacing and styling -->
                        <div class="ai-suggestion-text space-y-6">
                            @if (!string.IsNullOrEmpty(ViewBag.Suggestions))
                            {
                                @* <p class="text-green-600 mb-4">Debug: Suggestions found! Length: @ViewBag.Suggestions.ToString().Length</p> *@
                                var suggestionsText = ViewBag.Suggestions?.ToString() ?? "";
                                var sections = suggestionsText.Split(new[] { "##" }, StringSplitOptions.RemoveEmptyEntries);
                                @* <p class="text-blue-600 mb-4">Debug: Number of sections: @sections.Length</p> *@
                                foreach (var section in sections)
                                {
                                    if (!string.IsNullOrWhiteSpace(section))
                                    {
                                        var parts = section.Trim().Split(new[] { '\n' }, 2);
                                        if (parts.Length > 0)
                                        {
                                            <div class="section-block">
                                                @if (parts.Length > 1)
                                                {
                                                    <h3 class="text-xl font-semibold text-gray-800 mb-3 pb-2 border-b border-gray-200">@(parts[0]?.Trim() ?? "")</h3>
                                                    <div class="section-content text-gray-700 leading-relaxed">
                                                        @Html.Raw((parts[1]?.Trim() ?? "").Replace("\n", "<br>"))
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="section-content text-gray-700 leading-relaxed">
                                                        @Html.Raw((parts[0]?.Trim() ?? "").Replace("\n", "<br>"))
                                                    </div>
                                                }
                                            </div>
                                        }
                                    }
                                }
                            }
                            else
                            {
                                <p class="text-red-600 mb-4">Debug: No suggestions found. ViewBag.Suggestions is null or empty.</p>
                                <p class="text-gray-500">No suggestions found.</p>
                            }
                        </div>
                    </div>

                    @if (ViewBag.Suggestions != null && ViewBag.CVContent != null)
                    {
                        <form id="generateFinalCVForm" method="post" asp-action="GenerateFinalCV">
                            <input type="hidden" name="cvContent" value="@ViewBag.CVContent" />
                            <input type="hidden" name="suggestions" value="@ViewBag.Suggestions" />
                            <button type="submit" class="btn btn-success mt-4">Tạo CV hoàn chỉnh theo đề xuất</button>
                        </form>
                    }

                    <div class="mt-8 flex flex-col sm:flex-row justify-between gap-4">
                        <a href="@Url.Action("AnalysisResult", "CVAnalysis")" class="btn-secondary text-gray-700 font-medium py-3 px-6 rounded-lg inline-flex items-center justify-center hover:bg-gray-100 transition">
                            <i class="fas fa-arrow-left mr-3"></i> Analysis Result
                        </a>
                        <a href="@Url.Action("Index", "Home")" class="btn-primary bg-blue-600 text-white font-medium py-3 px-6 rounded-lg inline-flex items-center justify-center hover:bg-blue-700 transition">
                            <i class="fas fa-home mr-3"></i> Home
                        </a>
                    </div>
                </div>
             </div>
        </div>
        <!-- CỘT PHẢI -->
        <div class="space-y-6 order-3 md:order-3 md:col-span-3">
            @{
                // Khai báo tất cả biến cần thiết ở đầu
                var hasOverall = !string.IsNullOrEmpty(Model.OverallAnalysis);
                var overviewText = hasOverall ? Model.OverallAnalysis.Replace("\n", " ").Replace("<br>", " ") : "";
                var isLongOverview = hasOverall && overviewText.Length > 150;
                var overviewSummary = isLongOverview ? overviewText.Substring(0, 150) + "..." : overviewText;
                
                var hasEducation = !string.IsNullOrEmpty(Model.Education) || !string.IsNullOrEmpty(Model.Course) || !string.IsNullOrEmpty(Model.Certificate);
                var educationText = "";
                if (hasEducation)
                {
                    if (!string.IsNullOrEmpty(Model.Education)) educationText += Model.Education + "\n";
                    if (!string.IsNullOrEmpty(Model.Course)) educationText += Model.Course + "\n";
                    if (!string.IsNullOrEmpty(Model.Certificate)) educationText += Model.Certificate;
                }
                var isLongEducation = hasEducation && educationText.Length > 150;
                var educationSummary = isLongEducation ? educationText.Substring(0, 150) + "..." : educationText;
                
                var hasAchievement = !string.IsNullOrEmpty(Model.Achievement);
                var achievementText = hasAchievement ? Model.Achievement.Replace("\n", " ").Replace("\r\n", " ") : "";
                var isLongAchievement = hasAchievement && achievementText.Length > 150;
                var achievementSummary = isLongAchievement ? achievementText.Substring(0, 150) + "..." : achievementText;
                
                var hasExperience = !string.IsNullOrEmpty(Model.Experience);
                var experienceText = hasExperience ? Model.Experience.Replace("\n", " ").Replace("\r\n", " ") : "";
                var isLongExperience = hasExperience && experienceText.Length > 150;
                var experienceSummary = isLongExperience ? experienceText.Substring(0, 150) + "..." : experienceText;
                
                var hasProject = !string.IsNullOrEmpty(Model.Project);
                var projectText = hasProject ? Model.Project.Replace("\n", " ").Replace("<br>", " ") : "";
                var isLongProject = hasProject && projectText.Length > 150;
                var projectSummary = isLongProject ? projectText.Substring(0, 150) + "..." : projectText;
            }
            
            @if (hasOverall)
            {
                <div class="content-card bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden cursor-pointer hover:shadow-md transition-all duration-300" 
                     data-full-content="@Html.Raw(Model.OverallAnalysis.Replace("\n", "<br>"))" 
                     data-title="Profile Overview">
                    <div class="bg-gradient-to-r from-blue-50 to-gray-50 px-6 py-4 border-b border-gray-100">
                        <h2 class="text-xl font-bold text-gray-800 flex items-center">
                            <i class="fas fa-chart-pie text-blue-500 mr-3"></i> Profile Overview
                        </h2>
                    </div>
                    <div class="p-6">
                        <div class="content-summary prose max-w-none text-gray-700">
                            @Html.Raw(overviewSummary)
                        </div>
                        @if (isLongOverview)
                        {
                            <button class="show-more-btn text-blue-600 hover:text-blue-800 font-medium mt-3 text-sm">
                                <i class="fas fa-chevron-down mr-1"></i>Xem chi tiết
                            </button>
                        }
                    </div>
                </div>
            }
            @if (!string.IsNullOrEmpty(Model.Name))
            {
                <div class="bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden">
                    <div class="bg-gradient-to-r from-blue-50 to-gray-50 px-6 py-4 border-b border-gray-100">
                        <h2 class="text-xl font-bold text-gray-800 flex items-center">
                            <i class="fas fa-user text-blue-500 mr-3"></i> Name
                        </h2>
                    </div>
                    <div class="p-6">
                        <div class="flex flex-wrap gap-3">
                            @foreach (var skill in (Model.Name ?? "").Split(',').Where(s => !string.IsNullOrWhiteSpace(s)))
                            {
                                <span class="skill-tag bg-blue-50 text-blue-700 px-4 py-2 rounded-full text-sm font-medium border border-blue-100 hover:bg-blue-100 transition">
                                    @(skill?.Trim() ?? "")
                                </span>
                            }
                        </div>
                    </div>
                </div>
            }
            @if (!string.IsNullOrEmpty(Model.Email))
            {
                <div class="bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden">
                    <div class="bg-gradient-to-r from-blue-50 to-gray-50 px-6 py-4 border-b border-gray-100">
                        <h2 class="text-xl font-bold text-gray-800 flex items-center">
                            <i class="fas fa-envelope text-blue-500 mr-3"></i> Email
                        </h2>
                    </div>
                    <div class="p-6">
                        <div class="flex flex-wrap gap-3">
                            @foreach (var skill in (Model.Email ?? "").Split(',').Where(s => !string.IsNullOrWhiteSpace(s)))
                            {
                                <span class="skill-tag bg-blue-50 text-blue-700 px-4 py-2 rounded-full text-sm font-medium border border-blue-100 hover:bg-blue-100 transition">
                                    @(skill?.Trim() ?? "")
                                </span>
                            }
                        </div>
                    </div>
                </div>
            }
            @if (!string.IsNullOrEmpty(Model.Skills) || !string.IsNullOrEmpty(Model.LanguageProficiency))
            {
                <div class="bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden">
                    <div class="bg-gradient-to-r from-blue-50 to-gray-50 px-6 py-4 border-b border-gray-100">
                        <h2 class="text-xl font-bold text-gray-800 flex items-center">
                            <i class="fas fa-tools text-blue-500 mr-3"></i> Skills & Languages
                        </h2>
                    </div>
                    <div class="p-6 space-y-6">
                        @if (!string.IsNullOrEmpty(Model.Skills))
                        {
                            <div>
                                <h3 class="text-lg font-semibold text-gray-700 mb-3">Technical Skills</h3>
                                <div class="flex flex-wrap gap-3">
                                    @foreach (var skill in (Model.Skills ?? "").Split(',').Where(s => !string.IsNullOrWhiteSpace(s)))
                                    {
                                        <span class="skill-tag bg-blue-50 text-blue-700 px-4 py-2 rounded-full text-sm font-medium border border-blue-100 hover:bg-blue-100 transition">
                                            @(skill?.Trim() ?? "")
                                        </span>
                                    }
                                </div>
                            </div>
                        }
                        @if (!string.IsNullOrEmpty(Model.LanguageProficiency))
                        {
                            <div>
                                <h3 class="text-lg font-semibold text-gray-700 mb-3">Language</h3>
                                <div class="space-y-3">
                                    @foreach (var skill in (Model.LanguageProficiency ?? "").Split(',').Where(s => !string.IsNullOrWhiteSpace(s)))
                                    {
                                        <span class="skill-tag bg-blue-50 text-blue-700 px-4 py-2 rounded-full text-sm font-medium border border-blue-100 hover:bg-blue-100 transition">
                                            @(skill?.Trim() ?? "")
                                        </span>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
            @if (hasEducation)
            {
                <div class="content-card bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden cursor-pointer hover:shadow-md transition-all duration-300" 
                     data-full-content="@educationText.Replace("\n", "<br>")" 
                     data-title="Education & Qualifications">
                    <div class="bg-gradient-to-r from-blue-50 to-gray-50 px-6 py-4 border-b border-gray-100">
                        <h2 class="text-xl font-bold text-gray-800 flex items-center">
                            <i class="fas fa-graduation-cap text-blue-500 mr-3"></i> Education & Qualifications
                        </h2>
                    </div>
                    <div class="p-6">
                        <div class="content-summary text-gray-700">
                            @educationSummary.Replace("\n", "<br>")
                        </div>
                        @if (isLongEducation)
                        {
                            <button class="show-more-btn text-blue-600 hover:text-blue-800 font-medium mt-3 text-sm">
                                <i class="fas fa-chevron-down mr-1"></i>Xem chi tiết
                            </button>
                        }
                    </div>
                </div>
            }
            @if (hasAchievement)
            {
                <div class="content-card bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden cursor-pointer hover:shadow-md transition-all duration-300" 
                     data-full-content="@Model.Achievement.Replace("\n", "<br>")" 
                     data-title="Achievements">
                    <div class="bg-gradient-to-r from-blue-50 to-gray-50 px-6 py-4 border-b border-gray-100">
                        <h2 class="text-xl font-bold text-gray-800 flex items-center">
                            <i class="fas fa-trophy text-blue-500 mr-3"></i> Achievements
                        </h2>
                    </div>
                    <div class="p-6">
                        <div class="content-summary text-gray-700">
                            @achievementSummary
                        </div>
                        @if (isLongAchievement)
                        {
                            <button class="show-more-btn text-blue-600 hover:text-blue-800 font-medium mt-3 text-sm">
                                <i class="fas fa-chevron-down mr-1"></i>Xem chi tiết
                            </button>
                        }
                    </div>
                </div>
            }
            @if (hasExperience)
            {
                <div class="content-card bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden cursor-pointer hover:shadow-md transition-all duration-300" 
                     data-full-content="@Model.Experience.Replace("\n", "<br>")" 
                     data-title="Experience">
                    <div class="bg-gradient-to-r from-blue-50 to-gray-50 px-6 py-4 border-b border-gray-100">
                        <h2 class="text-xl font-bold text-gray-800 flex items-center">
                            <i class="fas fa-briefcase text-blue-500 mr-3"></i> Experience
                        </h2>
                    </div>
                    <div class="p-6">
                        <div class="content-summary text-gray-700">
                            @experienceSummary
                        </div>
                        @if (isLongExperience)
                        {
                            <button class="show-more-btn text-blue-600 hover:text-blue-800 font-medium mt-3 text-sm">
                                <i class="fas fa-chevron-down mr-1"></i>Xem chi tiết
                            </button>
                        }
                    </div>
                </div>
            }
            @if (hasProject)
            {
                <div class="content-card bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden cursor-pointer hover:shadow-md transition-all duration-300" 
                     data-full-content="@Html.Raw(Model.Project.Replace("\n", "<br>"))" 
                     data-title="Projects">
                    <div class="bg-gradient-to-r from-blue-50 to-gray-50 px-6 py-4 border-b border-gray-100">
                        <h2 class="text-xl font-bold text-gray-800 flex items-center">
                            <i class="fas fa-briefcase text-blue-500 mr-3"></i> Projects
                        </h2>
                    </div>
                    <div class="p-6">
                        <div class="content-summary text-gray-700">
                            @projectSummary
                        </div>
                        @if (isLongProject)
                        {
                            <button class="show-more-btn text-blue-600 hover:text-blue-800 font-medium mt-3 text-sm">
                                <i class="fas fa-chevron-down mr-1"></i>Xem chi tiết
                            </button>
                        }
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- Action Buttons -->
    <div class="mt-8 flex flex-col sm:flex-row justify-center gap-4">
        <a asp-action="Index" class="w-full sm:w-auto flex justify-center items-center px-6 py-3 border border-transparent rounded-xl shadow-sm text-sm font-medium text-white bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition">
            <i class="fas fa-redo mr-2"></i> Analyze another CV
        </a>
        <button id="shareResultBtn" class="w-full sm:w-auto flex justify-center items-center px-6 py-3 border border-gray-300 rounded-xl shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition">
            <i class="fas fa-share-alt mr-2"></i> Share your results
        </button>
    </div>
</div>

<!-- Enhanced Loading Modal with Progress Animation -->
<div id="loadingModal" class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-30 backdrop-blur-sm hidden">
    <div class="bg-white rounded-2xl shadow-2xl p-8 flex flex-col items-center animate-fade-in-up w-80 max-w-[90vw]">
        <!-- Animated spinner with gradient -->
        <div id="loadingSpinner" class="mb-6 relative w-16 h-16">
            <div class="absolute inset-0 rounded-full border-4 border-blue-200"></div>
            <div class="absolute inset-0 rounded-full border-4 border-transparent border-t-blue-600 border-r-blue-600 animate-spin"></div>
            <div class="absolute inset-1 rounded-full bg-gradient-to-br from-blue-50 to-white flex items-center justify-center">
                <i class="fas fa-file-alt text-blue-500 text-xl"></i>
            </div>
        </div>

        <!-- Progress text with animation -->
        <div id="loadingText" class="font-semibold text-lg text-center mb-4">
            <div class="text-gray-800">Analyzing your CV...</div>
            <div class="text-sm text-gray-500 mt-1 animate-pulse">This may take a few moments</div>
        </div>

        <!-- Animated progress bar -->
        <div class="w-full bg-gray-200 rounded-full h-2 mb-6 overflow-hidden">
            <div id="progressBar" class="bg-gradient-to-r from-blue-500 to-indigo-600 h-full rounded-full animate-progress"></div>
        </div>

        <!-- Cancel button with enhanced styling -->
        <div class="mt-2">
            <button type="button" id="cancelAnalyzeBtn" class="px-5 py-2 bg-gradient-to-r from-gray-100 to-gray-200 text-gray-700 rounded-lg hover:from-gray-200 hover:to-gray-300 transition-all duration-300 shadow-sm hover:shadow-md transform hover:-translate-y-0.5 focus:outline-none focus:ring-2 focus:ring-gray-400">
                Cancel Analysis
            </button>
        </div>
    </div>
</div>

<!-- Loading Modal for CV Scoring -->
<div id="cvScoreLoadingModal" class="fixed inset-0 z-50 flex items-center justify-center bg-opacity-40 hidden">
    <div class="bg-white rounded-xl shadow-lg p-8 flex flex-col items-center animate__animated animate__fadeInDown w-80">
        <div class="mb-4">
            <svg class="animate-spin h-10 w-10 text-blue-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8v8z"></path>
            </svg>
        </div>
        <div class="font-semibold text-lg text-center">
            AI system is scoring your CV. Please wait a moment...
        </div>
    </div>
</div>

<!-- Share Modal -->
<div id="shareModal" class="fixed inset-0 z-50 hidden items-center justify-center bg-black bg-opacity-50 backdrop-blur-sm">
    <div class="bg-white rounded-2xl shadow-xl p-6 max-w-md w-full mx-4">
        <div class="flex justify-between items-center mb-4">
            <h3 class="text-lg font-bold text-gray-900">Share your results</h3>
            <button id="closeShareModal" class="text-gray-400 hover:text-gray-500">
                <i class="fas fa-times"></i>
            </button>
        </div>
        <div class="space-y-4">
            <div>
                <label for="shareLink" class="block text-sm font-medium text-gray-700 mb-1">Link</label>
                <div class="flex">
                    <input type="text" id="shareLink" readonly value="@Context.Request.Scheme://@Context.Request.Host@Context.Request.Path" class="flex-1 min-w-0 block w-full px-3 py-2 rounded-l-lg border border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                    <button id="copyShareLink" class="inline-flex items-center px-3 py-2 border border-l-0 border-gray-300 rounded-r-lg bg-gray-50 text-sm font-medium text-gray-700 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500">
                        <i class="fas fa-copy mr-1"></i>Copy
                    </button>
                </div>
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">Share via</label>
                <div class="flex space-x-3">
                    <a href="#" class="w-10 h-10 rounded-full bg-blue-600 text-white flex items-center justify-center hover:bg-blue-700 transition">
                        <i class="fab fa-facebook-f"></i>
                    </a>
                    <a href="#" class="w-10 h-10 rounded-full bg-blue-400 text-white flex items-center justify-center hover:bg-blue-500 transition">
                        <i class="fab fa-linkedin-in"></i>
                    </a>
                    <a href="#" class="w-10 h-10 rounded-full bg-red-600 text-white flex items-center justify-center hover:bg-red-700 transition">
                        <i class="fab fa-google"></i>
                    </a>
                    <a href="#" class="w-10 h-10 rounded-full bg-gray-800 text-white flex items-center justify-center hover:bg-gray-900 transition">
                        <i class="fab fa-github"></i>
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Content Detail Modal -->
<div id="contentDetailModal" class="fixed inset-0 z-50 hidden items-center justify-center bg-black bg-opacity-50 backdrop-blur-sm">
    <div class="bg-white rounded-2xl shadow-xl p-6 max-w-4xl w-full mx-4 max-h-[90vh] overflow-y-auto">
        <div class="flex justify-between items-center mb-4">
            <h3 id="modalTitle" class="text-xl font-bold text-gray-900"></h3>
            <button id="closeContentModal" class="text-gray-400 hover:text-gray-500">
                <i class="fas fa-times"></i>
            </button>
        </div>
        <div id="modalContent" class="prose max-w-none text-gray-700">
        </div>
    </div>
</div>