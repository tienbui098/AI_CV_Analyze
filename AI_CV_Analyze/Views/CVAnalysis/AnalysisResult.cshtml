@model AI_CV_Analyze.Models.ResumeAnalysisResult

@{
    ViewData["Title"] = "CV Analysis Results";
}

<div class="container mt-5">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <a href="@Url.Action("JobPrediction", "CVAnalysis")" class="btn btn-secondary">
            <i class="fas fa-arrow-left me-1"></i>Quay lại Gợi ý công việc
        </a>
        <button id="btnBackEditSuggestions" class="btn btn-secondary">
            <i class="fas fa-arrow-left me-1"></i>Quay lại Đề xuất chỉnh sửa CV
        </button>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var btn = document.getElementById('btnBackEditSuggestions');
            btn.addEventListener('click', function(e) {
                // Kiểm tra biến ViewBag hoặc tạo endpoint kiểm tra session
                var hasEditSuggestions = '@(Context.Session.GetString("EditSuggestions") != null ? "1" : "0")';
                if (hasEditSuggestions === '1') {
                    window.location.href = '@Url.Action("EditSuggestions", "CVAnalysis")';
                } else {
                    alert('Bạn chưa dùng chức năng đề xuất chỉnh sửa CV');
                }
            });
        });
    </script>
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card bg-primary text-white">
                <div class="card-body text-center">
                    <h1 class="mb-2"><i class="fas fa-file-alt me-2"></i>CV Analysis Complete</h1>
                    <p class="mb-1"><strong>File:</strong> @Model.FileName</p>
                    <p class="mb-0"><strong>Analyzed on:</strong> @Model.AnalysisDate.ToString("g")</p>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- CV Analysis Results -->
        <div class="col-lg-8 mb-4">
            <div class="card h-100 shadow">
                <div class="card-header bg-info text-white">
                    <h2><i class="fas fa-chart-line me-2"></i>CV Analysis Results</h2>
                </div>
                <div class="card-body">
                    @if (!string.IsNullOrEmpty(Model.OverallAnalysis))
                    {
                        <div class="mb-4">
                            <h3>Profile & Objective</h3>
                            <div class="p-3 bg-light rounded">
                                <pre class="mb-0">@Model.OverallAnalysis</pre>
                            </div>
                        </div>
                    }

                    @if (!string.IsNullOrEmpty(Model.Skills))
                    {
                        <div class="mb-4">
                            <h3>Skills</h3>
                            <div class="p-3 bg-light rounded">
                                <pre class="mb-0">@Model.Skills</pre>
                            </div>
                        </div>
                    }

                    @if (!string.IsNullOrEmpty(Model.Education))
                    {
                        <div class="mb-4">
                            <h3>Education</h3>
                            <div class="p-3 bg-light rounded">
                                <pre class="mb-0">@Model.Education</pre>
                            </div>
                        </div>
                    }

                    @if (!string.IsNullOrEmpty(Model.Experience))
                    {
                        <div class="mb-4">
                            <h3>Experience</h3>
                            <div class="p-3 bg-light rounded">
                                <pre class="mb-0">@Model.Experience</pre>
                            </div>
                        </div>
                    }

                    @if (!string.IsNullOrEmpty(Model.KeyPhrases))
                    {
                        <div class="mb-4">
                            <h3>Languages</h3>
                            <div class="p-3 bg-light rounded">
                                <pre class="mb-0">@Model.KeyPhrases</pre>
                            </div>
                        </div>
                    }

                    @if (!string.IsNullOrEmpty(Model.FormFields))
                    {
                        <div class="mb-4">
                            <h3>Projects</h3>
                            <div class="p-3 bg-light rounded">
                                <pre class="mb-0">@Model.FormFields</pre>
                            </div>
                        </div>
                    }
                </div>
                <div class="card-footer bg-light">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <a asp-action="Index" class="btn btn-primary">
                                <i class="fas fa-plus me-1"></i>Analyze Another CV
                            </a>
                        </div>
                        <div>
                            <form asp-action="GetEditSuggestions" method="post" class="d-inline" id="editSuggestionsForm">
                                <input type="hidden" name="Content" value="@Model.Content" />
                                <button type="submit" class="btn btn-info">
                                    <i class="fas fa-magic me-1"></i>Get CV Edit Suggestions
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Job Recommendations Sidebar -->
        <div class="col-lg-4 mb-4">
            <!-- Job Recommendations Section -->
            <div class="card h-100 shadow">
                <div class="card-header bg-success text-white">
                    <h3><i class="fas fa-briefcase me-2"></i>Job Recommendations</h3>
                    <small>Based on your CV skills</small>
                </div>
                <div class="card-body">
                    @if (ViewBag.JobRecommendations is Dictionary<string, double> jobRecs && jobRecs.Any())
                    {
                        <div class="mb-3">
                            <p class="text-muted small">AI-powered job suggestions based on your skills:</p>
                        </div>
                        @foreach (var job in jobRecs.OrderByDescending(x => x.Value).Take(3))
                        {
                            <div class="job-recommendation-item mb-3">
                                <div class="card border-success job-recommendation-card">
                                    <div class="card-body p-3">
                                        <div class="d-flex align-items-center">
                                            <div class="flex-grow-1">
                                                <h6 class="card-title text-primary mb-1 fw-bold">@job.Key</h6>
                                                <div class="progress mb-2" style="height: 6px;">
                                                    <div class="progress-bar bg-success" 
                                                         style="width: @((job.Value * 100).ToString("F0"))%"></div>
                                                </div>
                                                <small class="text-muted">
                                                    <i class="fas fa-percentage me-1"></i>@((job.Value * 100).ToString("F1"))% Match
                                                </small>
                                            </div>
                                            <div class="ms-2">
                                                <div class="circular-chart">
                                                    <svg viewBox="0 0 36 36" class="circular-chart-svg">
                                                        <path class="circle-bg"
                                                              d="M18 2.0845
                                                                 a 15.9155 15.9155 0 0 1 0 31.831
                                                                 a 15.9155 15.9155 0 0 1 0 -31.831"/>
                                                        <path class="circle"
                                                              stroke-dasharray="@((job.Value * 100).ToString("0")), 100"
                                                              d="M18 2.0845
                                                                 a 15.9155 15.9155 0 0 1 0 31.831
                                                                 a 15.9155 15.9155 0 0 1 0 -31.831"/>
                                                        <text x="18" y="20.35" class="percentage" text-anchor="middle" font-size="6">@((job.Value * 100).ToString("0"))%</text>
                                                    </svg>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        <div class="mt-3 text-center">
                            <a href="@Url.Action("JobPrediction", "CVAnalysis")" class="btn btn-outline-success btn-sm">
                                <i class="fas fa-search me-1"></i>Get More Suggestions
                            </a>
                        </div>
                    }
                    else if (!string.IsNullOrEmpty(ViewBag.JobRecommendationsError))
                    {
                        <div class="alert alert-warning small">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            <strong>Job recommendations temporarily unavailable:</strong><br />
                            <small>@ViewBag.JobRecommendationsError</small>
                        </div>
                        <div class="text-center">
                            <a href="@Url.Action("JobPrediction", "CVAnalysis")" class="btn btn-outline-success btn-sm">
                                <i class="fas fa-search me-1"></i>Try Manual Job Search
                            </a>
                        </div>
                    }
                    else
                    {
                        <div class="text-center text-muted">
                            <i class="fas fa-briefcase fa-2x mb-3 text-muted"></i>
                            <p class="small">No job recommendations available yet.</p>
                            <a href="@Url.Action("JobPrediction", "CVAnalysis")" class="btn btn-outline-success btn-sm">
                                <i class="fas fa-search me-1"></i>Get Job Suggestions
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Loading Modal -->
<div class="modal fade" id="loadingModal" tabindex="-1" aria-labelledby="loadingModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body text-center p-4">
                <div class="spinner-border text-primary mb-3" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <div id="loadingModalLabel" class="fw-bold fs-5">Hệ thống AI đang xử lý đề xuất chỉnh sửa CV của bạn, Hãy chờ một chút nhé</div>
                <div class="mt-3">
                    <button type="button" class="btn btn-danger" id="cancelAnalyzeBtn">Hủy</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .job-recommendation-card {
            transition: all 0.3s ease;
            border: 1px solid #e9ecef;
        }
        
        .job-recommendation-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            border-color: #28a745;
        }
        
        .circular-chart-svg {
            width: 50px;
            height: 50px;
        }
        
        .circle-bg {
            fill: none;
            stroke: #e9ecef;
            stroke-width: 3.8;
        }
        
        .circle {
            fill: none;
            stroke-width: 2.8;
            stroke: #28a745;
            stroke-linecap: round;
            transition: stroke-dasharray 0.6s ease 0s;
        }
        
        .percentage {
            font-family: Arial, Helvetica, sans-serif;
            fill: #333;
            font-weight: bold;
        }
        
        .job-recommendation-item {
            transition: all 0.2s ease;
        }
        
        .card-header h3 {
            margin-bottom: 0;
        }
        
        .card-header small {
            opacity: 0.9;
        }
        
        @@media (max-width: 768px) {
            .col-lg-8, .col-lg-4 {
                margin-bottom: 1rem;
            }
        }
    </style>
}

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var form = document.getElementById("editSuggestionsForm");
            var cancelBtn = document.getElementById("cancelAnalyzeBtn");
            var loadingModal = new bootstrap.Modal(document.getElementById('loadingModal'));
            var controller = null;

            if (form) {
                form.addEventListener("submit", function (e) {
                    e.preventDefault(); // Ngăn submit mặc định
                    // Hiện modal loading
                    loadingModal.show();

                    // Tạo AbortController mới cho mỗi lần gửi
                    controller = new AbortController();

                    // Lấy dữ liệu form
                    var formData = new FormData(form);

                    fetch(form.action, {
                        method: "POST",
                        body: formData,
                        signal: controller.signal
                    })
                    .then(response => {
                        if (response.redirected) {
                            window.location.href = response.url;
                        } else {
                            return response.text().then(html => {
                                document.body.innerHTML = html;
                            });
                        }
                    })
                    .catch(error => {
                        if (error.name !== 'AbortError') {
                            alert("Có lỗi xảy ra khi gửi yêu cầu.");
                        }
                    })
                    .finally(() => {
                        loadingModal.hide();
                    });
                });
            }

            if (cancelBtn) {
                cancelBtn.addEventListener("click", function () {
                    if (controller) {
                        controller.abort(); // Hủy request
                    }
                    loadingModal.hide();
                });
            }
        });
    </script>
}