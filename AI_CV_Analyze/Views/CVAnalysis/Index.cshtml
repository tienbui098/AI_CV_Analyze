@{
    ViewData["Title"] = "CV Analysis";
    Layout = "_LayoutCVAnalysis";
}

<div class="min-h-screen flex items-center justify-center p-4">
    <div class="w-full max-w-2xl">
        <!-- Upload Card -->
        <div class="bg-white rounded-2xl shadow-lg overflow-hidden">
            <form id="cvForm" class="p-8" method="post" enctype="multipart/form-data" asp-action="AnalyzeCV">
                <!-- Dropzone Area -->
                <div id="dropzone" class="dropzone cursor-pointer">
                    <div id="upload-instructions" class="text-center space-y-6">
                        <div class="upload-icon w-20 h-20 rounded-2xl flex items-center justify-center mx-auto">
                            <i class="fas fa-cloud-upload-alt text-blue-600 text-3xl"></i>
                        </div>
                        <div class="space-y-2">
                            <h3 class="text-xl sm:text-2xl font-semibold text-gray-900">Kéo và thả CV vào đây</h3>
                            <p class="text-gray-500">hoặc</p>
                        </div>
                        <label for="cvFile" class="file-input-label bg-blue-600 hover:bg-blue-700 text-white font-medium py-3 px-8 rounded-lg cursor-pointer inline-block">
                            <i class="fas fa-folder-open mr-2"></i> Chọn file từ máy tính
                        </label>
                        <input id="cvFile" name="cvFile" type="file" class="hidden" accept=".pdf,.doc,.docx,.jpg,.jpeg,.png" required />
                        <p class="text-gray-500 text-sm">Hỗ trợ định dạng: PDF, DOC, DOCX, JPG, PNG (tối đa 5MB)</p>
                    </div>

                    <!-- File Info & Analyze Button (hidden by default) -->
                    <div id="analyze-section" class="text-center space-y-6">
                        <div id="file-info" class="file-card bg-gray-50 p-4 rounded-lg max-w-md mx-auto">
                            <div class="flex items-center">
                                <div class="bg-blue-100 p-3 rounded-lg mr-4">
                                    <i class="fas fa-file-alt text-blue-600 text-xl"></i>
                                </div>
                                <div class="text-left overflow-hidden">
                                    <p id="file-name" class="font-medium text-gray-900 truncate"></p>
                                    <p id="file-size" class="text-sm text-gray-500 mt-1"></p>
                                </div>
                                <button id="remove-file" type="button" class="text-gray-400 hover:text-red-500 transition ml-auto">
                                    <i class="fas fa-times text-xl"></i>
                                </button>
                            </div>
                        </div>
                        <button type="submit" class="btn-primary text-white font-medium py-3 px-8 rounded-lg mx-auto">
                            <i class="fas fa-magic mr-2"></i> Phân tích CV ngay
                        </button>
                    </div>
                </div>

                <!-- Error Message -->
                <div id="error-message" class="mt-4 hidden">
                    <div class="bg-red-50 border-l-4 border-red-500 p-4 rounded-r-lg">
                        <div class="flex items-start">
                            <div class="flex-shrink-0 pt-0.5">
                                <i class="fas fa-exclamation-circle text-red-500"></i>
                            </div>
                            <div class="ml-3">
                                <p id="error-text" class="text-sm text-red-700"></p>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>

        <!-- Tips Section -->
        <div class="mt-6 bg-blue-50 border-l-4 border-blue-500 p-6 rounded-xl">
            <h3 class="text-lg font-semibold text-gray-900 mb-4 flex items-center">
                <i class="fas fa-lightbulb text-blue-600 mr-3 text-xl"></i>
                Mẹo để có CV hoàn hảo
            </h3>
            <ul class="space-y-3">
                <li class="flex items-start">
                    <div class="flex-shrink-0 mt-1 mr-3">
                        <div class="bg-blue-100 text-blue-600 w-6 h-6 rounded-full flex items-center justify-center">
                            <i class="fas fa-check text-xs"></i>
                        </div>
                    </div>
                    <p class="text-gray-700">Sử dụng định dạng PDF để đảm bảo hiển thị chính xác trên mọi thiết bị</p>
                </li>
                <li class="flex items-start">
                    <div class="flex-shrink-0 mt-1 mr-3">
                        <div class="bg-blue-100 text-blue-600 w-6 h-6 rounded-full flex items-center justify-center">
                            <i class="fas fa-check text-xs"></i>
                        </div>
                    </div>
                    <p class="text-gray-700">Kiểm tra kỹ chính tả, ngữ pháp và định dạng trước khi tải lên</p>
                </li>
                <li class="flex items-start">
                    <div class="flex-shrink-0 mt-1 mr-3">
                        <div class="bg-blue-100 text-blue-600 w-6 h-6 rounded-full flex items-center justify-center">
                            <i class="fas fa-check text-xs"></i>
                        </div>
                    </div>
                    <p class="text-gray-700">Đặt tên file rõ ràng, ví dụ: "NguyenVanA_CV_Developer.pdf"</p>
                </li>
                <li class="flex items-start">
                    <div class="flex-shrink-0 mt-1 mr-3">
                        <div class="bg-blue-100 text-blue-600 w-6 h-6 rounded-full flex items-center justify-center">
                            <i class="fas fa-check text-xs"></i>
                        </div>
                    </div>
                    <p class="text-gray-700">Giữ kích thước file dưới 5MB để tải lên nhanh hơn</p>
                </li>
                <li class="flex items-start">
                    <div class="flex-shrink-0 mt-1 mr-3">
                        <div class="bg-blue-100 text-blue-600 w-6 h-6 rounded-full flex items-center justify-center">
                            <i class="fas fa-check text-xs"></i>
                        </div>
                    </div>
                    <p class="text-gray-700">Để đảm bảo chất lượng phân tích đạt kết quả tốt nhất, khuyến nghị người dùng sử dụng tiếng anh khi viết CV</p>
                </li>
            </ul>
        </div>
    </div>
</div>

<!-- Loading Modal -->
<div class="modal fade" id="loadingModal" tabindex="-1" aria-labelledby="loadingModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-body text-center p-4">
        <div class="spinner-border text-primary mb-3" role="status">
          <span class="visually-hidden">Loading...</span>
        </div>
        <div id="loadingModalLabel" class="fw-bold fs-5">Hệ thống đang xử lý CV của bạn, Hãy chờ một chút nhé</div>
        <div class="mt-3">
          <button type="button" class="btn btn-danger" id="cancelAnalyzeBtn">Hủy</button>
        </div>
      </div>
    </div>
  </div>
</div>

@section Scripts {
    <script>
        // DOM Elements
        const dropzone = document.getElementById('dropzone');
        const fileInput = document.getElementById('cvFile');
        const uploadInstructions = document.getElementById('upload-instructions');
        const analyzeSection = document.getElementById('analyze-section');
        const fileName = document.getElementById('file-name');
        const fileSize = document.getElementById('file-size');
        const removeFileBtn = document.getElementById('remove-file');
        const errorMessage = document.getElementById('error-message');
        const errorText = document.getElementById('error-text');
        const form = document.getElementById('cvForm');

        let analyzeModal;
        let formSubmitting = false;
        let abortController;
        const cancelBtn = document.getElementById('cancelAnalyzeBtn');

        // Prevent default drag behaviors
        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
            dropzone.addEventListener(eventName, preventDefaults, false);
            document.body.addEventListener(eventName, preventDefaults, false);
        });

        function preventDefaults(e) {
            e.preventDefault();
            e.stopPropagation();
        }

        // Highlight drop zone when item is dragged over it
        ['dragenter', 'dragover'].forEach(eventName => {
            dropzone.addEventListener(eventName, highlight, false);
        });

        ['dragleave', 'drop'].forEach(eventName => {
            dropzone.addEventListener(eventName, unhighlight, false);
        });

        function highlight() {
            dropzone.classList.add('active');
        }

        function unhighlight() {
            dropzone.classList.remove('active');
        }

        // Handle dropped files
        dropzone.addEventListener('drop', handleDrop, false);

        function handleDrop(e) {
            const dt = e.dataTransfer;
            const files = dt.files;
            handleFiles(files);
        }

        // Handle selected files
        fileInput.addEventListener('change', function() {
            handleFiles(this.files);
        });

        // Handle files
        function handleFiles(files) {
            if (files.length > 0) {
                const file = files[0];
                const validTypes = [
                    'application/pdf',
                    'application/msword',
                    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
                    'image/jpeg',
                    'image/png'
                ];

                const validExtensions = ['.pdf', '.doc', '.docx', '.jpg', '.jpeg', '.png'];
                const fileExtension = file.name.substring(file.name.lastIndexOf('.')).toLowerCase();

                if (!validTypes.includes(file.type) && !validExtensions.includes(fileExtension)) {
                    showError('Chỉ hỗ trợ định dạng PDF, DOC, DOCX, JPG hoặc PNG');
                    return;
                }

                if (file.size > 5 * 1024 * 1024) {
                    showError('Kích thước file tối đa là 5MB. Vui lòng chọn file nhỏ hơn.');
                    return;
                }

                hideError();
                displayFileInfo(file);
                fileInput.files = files; // Set files to input for form submission
            }
        }

        // Display file info and show analyze button
        function displayFileInfo(file) {
            fileName.textContent = file.name;
            fileSize.textContent = formatFileSize(file.size);

            // Hide upload instructions and show analyze section
            uploadInstructions.style.display = 'none';
            analyzeSection.style.display = 'block';
        }

        // Remove file and reset to upload state
        removeFileBtn.addEventListener('click', function() {
            fileInput.value = '';
            uploadInstructions.style.display = 'block';
            analyzeSection.style.display = 'none';
            hideError();
        });

        // Format file size
        function formatFileSize(bytes) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        }

        // Show error message
        function showError(message) {
            errorText.textContent = message;
            errorMessage.classList.remove('hidden');
        }

        // Hide error message
        function hideError() {
            errorMessage.classList.add('hidden');
        }

        // Form submission
        form.addEventListener('submit', function (e) {
            if (formSubmitting) return; // Đã submit, không submit lại
            e.preventDefault();
            analyzeModal = new bootstrap.Modal(document.getElementById('loadingModal'));
            analyzeModal.show();
            formSubmitting = true;

            // Tạo AbortController cho fetch (nếu dùng fetch)
            abortController = new AbortController();

            // Gửi form bằng AJAX để có thể hủy
            const formData = new FormData(form);
            fetch(form.action, {
                method: 'POST',
                body: formData,
                signal: abortController.signal
            })
            .then(response => response.text())
            .then(html => {
                // Chuyển sang trang kết quả (replace body)
                document.open();
                document.write(html);
                document.close();
            })
            .catch(err => {
                if (err.name === 'AbortError') {
                    // Đã hủy
                    analyzeModal.hide();
                    formSubmitting = false;
                } else {
                    alert('Đã xảy ra lỗi khi phân tích CV!');
                    analyzeModal.hide();
                    formSubmitting = false;
                }
            });
        });

        cancelBtn.addEventListener('click', function () {
            if (abortController) abortController.abort();
            analyzeModal.hide();
            formSubmitting = false;
        });
    </script>
}