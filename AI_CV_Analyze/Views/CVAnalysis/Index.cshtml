@{
    ViewData["Title"] = "CV Analysis";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h2 class="text-center">CV Analysis</h2>
                </div>
                <div class="card-body">
                    <form method="post" enctype="multipart/form-data" asp-action="AnalyzeCV" id="cvForm">
                        <div class="mb-3">
                            <label for="cvFile" class="form-label">Upload your CV (PDF, DOCX, or image)</label>
                            <input type="file" class="form-control" id="cvFile" name="cvFile" accept=".pdf,.docx,.jpg,.jpeg,.png" required>
                        </div>
                        <div class="text-center">
                            <button type="submit" class="btn btn-primary">Analyze CV</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Loading Modal -->
<div class="modal fade" id="loadingModal" tabindex="-1" aria-labelledby="loadingModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-body text-center p-4">
        <div class="spinner-border text-primary mb-3" role="status">
          <span class="visually-hidden">Loading...</span>
        </div>
        <div id="loadingModalLabel" class="fw-bold fs-5">Hệ thống đang xử lý CV của bạn, Hãy chờ một chút nhé</div>
        <div class="mt-3">
          <button type="button" class="btn btn-danger" id="cancelAnalyzeBtn">Hủy</button>
        </div>
      </div>
    </div>
  </div>
</div>

@section Scripts {
    <script>
        let analyzeModal;
        let formSubmitting = false;
        let abortController;
        const form = document.getElementById('cvForm');
        const cancelBtn = document.getElementById('cancelAnalyzeBtn');

        form.addEventListener('submit', function (e) {
            if (formSubmitting) return; // Đã submit, không submit lại
            e.preventDefault();
            analyzeModal = new bootstrap.Modal(document.getElementById('loadingModal'));
            analyzeModal.show();
            formSubmitting = true;

            // Tạo AbortController cho fetch (nếu dùng fetch)
            abortController = new AbortController();

            // Gửi form bằng AJAX để có thể hủy
            const formData = new FormData(form);
            fetch(form.action, {
                method: 'POST',
                body: formData,
                signal: abortController.signal
            })
            .then(response => response.text())
            .then(html => {
                // Chuyển sang trang kết quả (replace body)
                document.open();
                document.write(html);
                document.close();
            })
            .catch(err => {
                if (err.name === 'AbortError') {
                    // Đã hủy
                    analyzeModal.hide();
                    formSubmitting = false;
                } else {
                    alert('Đã xảy ra lỗi khi phân tích CV!');
                    analyzeModal.hide();
                    formSubmitting = false;
                }
            });
        });

        cancelBtn.addEventListener('click', function () {
            if (abortController) abortController.abort();
            analyzeModal.hide();
            formSubmitting = false;
        });
    </script>
} 